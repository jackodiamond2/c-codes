//delete an element in BST

#include <stdio.h>
#include <stdlib.h>


struct node{
  int data;
  struct node *left, *right;
};

struct node *head , *temp ,*root , *temp2 ,*temp3;

struct node *newNode (int a){
    root = (struct node*)malloc(sizeof(struct node));
    root->data = a;
    root ->left = root->right = NULL;
    
    return root;
}

struct node *insert(struct node* head , int key){
    
    if(head==NULL)
        return newNode(key);
    if(key<head->data)
        head->left = insert(head->left,key);
    else
        head->right = insert(head->right,key);
        
    return head;
}

void inorder(struct node* head){
   if(head!=NULL){
    inorder(head->left);
    printf("%d",head->data);
    inorder(head->right);
    }
}

struct node* deletea (struct node* root,int key){
   
   if(key<root->data){
       deletea(root->left,key);
   }
   else if(key>root->data){
       deletea(root->right,key);
   }
   
    if(key==root->data){ 
   
    if(root->left==NULL){
        temp2 = root->right;
        free(root);
        return temp2;
    }
    
    if(root->right==NULL){
        temp2 = root->left;
        free(root);
        return temp2;
    }
    
    temp3 = root->right;
    while(temp3->left!=NULL){
        temp3 = temp3->left;
    }
     root->data = temp3->data;
     root->right = deletea(root->right,temp3->data);
    
    }
    return root;
    
    
}

int main() {
	// your code goes here
	head = (struct node*)malloc(sizeof(struct node));
	head = newNode(1);
	head = insert(head,4);
	head = insert(head,2);
	head = insert(head,6);
	inorder(head);
	printf("\n");
	head = deletea(head,4);
	inorder(head);
	return 0;
}
