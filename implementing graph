//implementation of adjacency list graph or simply implementation of graph
//real pain in the a**
#include<stdio.h>
#include<stdlib.h>

struct adjListNode {
  int data;
  struct adjListNode* next;
};

struct adjListHead {
    struct adjListNode* head;
};

struct graph {
  int v;
  struct adjListHead* array;
};

struct adjListNode* newNode(int a){
    struct adjListNode* newOne = (struct adjListNode*)malloc(sizeof(struct adjListNode));
    newOne->data=a;
    newOne->next=NULL;
    return newOne;
}

struct graph* newGraph(int a){
    struct graph* nayaGraph = (struct graph*)malloc(sizeof(struct graph));
    nayaGraph->v = a;
    nayaGraph->array = (struct adjListHead*)malloc(a*sizeof(struct adjListHead));
    for(int i=0;i<a;i++){
        nayaGraph->array[a].head = NULL;
    }
    return nayaGraph ;
}

void newEdge(struct graph* gra,int src,int dst){
    struct adjListNode* noda = newNode(dst);
    noda->next = gra->array[src].head;
    gra->array[src].head = noda;
    
    noda = newNode(src);
    noda->next = gra->array[dst].head;
    gra->array[dst].head = noda;
    
   
}

void printGraph(struct graph* gra){
    for(int i=0; i<gra->v;i++){
        struct adjListNode* nnoo = gra->array[i].head;
        printf("head");
        while(nnoo){
            printf("->");
            printf("%d",nnoo->data);
            
            nnoo = nnoo->next;
        }
        printf("\n");
    }
}

int main() {
	// your code goes here
    struct graph* grapha = newGraph(4);
     newEdge(grapha,0,3);
     newEdge(grapha,0,2);
    newEdge(grapha,1,3);
     newEdge(grapha,1,2);
     newEdge(grapha,2,3);
    printGraph(grapha);
	return 0;
}
